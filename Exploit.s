.section .start, "ax"

start:
	# Set up a stack frame.
	lis 1, 0x8080          ; Load immediate stack pointer base.
	li 0, 0                ; Clear register 0.
	stwu 0, -64(1)         ; Store word and update stack pointer.

	# Stop audio and video (specific to Rayman: Raving Rabbids).
	lis 0, audio_stop@h    ; Load high part of audio_stop address.
	ori 0, 0, audio_stop@l ; Or in the low part of audio_stop address.
	mtctr 0                ; Move to CTR (Counter Register).
	bctrl                  ; Branch to subroutine.
	lis 0, video_stop@h    ; Load high part of video_stop address.
	ori 0, 0, video_stop@l ; Or in the low part of video_stop address.
	mtctr 0                ; Move to CTR (Counter Register).
	bctrl                  ; Branch to subroutine.

	# Move exploit code into place (32kB starting at 64kB in save file).
	lis 3, main@h          ; Load high part of main address.
	ori 3, 3, main@l       ; Or in the low part of main address.
	addi 5, 3, -4          ; Adjust pointer for code destination.

	lis 4, 0x806c          ; Load high part of source location.
	lwz 4, 0xdc48-0x10000(4) ; Load word from source.
	addi 4, 4, -4          ; Adjust source pointer.
	addis 4, 4, 1          ; Add offset to source.
	addi 4, 4, end-start   ; Calculate size of code to move.

	li 0, 0x2000           ; Set loop counter for 32kB.
	mtctr 0                ; Move to CTR (Counter Register).

copy_loop:
	lwzu 0, 4(4)           ; Load word and update source pointer.
	stwu 0, 4(5)           ; Store word and update destination pointer.
	bdnz copy_loop         ; Loop until all words are copied.

	# Sync caches for the moved code.
	li 0, 0x0400           ; Set loop counter for cache lines.
	mtctr 0                ; Move to CTR (Counter Register).
	mr 5, 3                ; Copy destination pointer to register 5.

cache_sync_loop:
	dcbst 0, 5             ; Data cache block store.
	sync                   ; Synchronize.
	icbi 0, 5              ; Instruction cache block invalidate.
	addi 5, 5, 0x20        ; Advance pointer by cache line size.
	bdnz cache_sync_loop   ; Loop until caches are synced.

	sync                   ; Final sync.
	isync                  ; Instruction sync.

	# Jump to the exploit code!
	mtctr 3                ; Move exploit code address to CTR.
	bctr                   ; Branch to exploit code.

end: